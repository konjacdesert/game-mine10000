(()=>{"use strict";class t{constructor(t,e,i){i?this.display=i:(this.display=document.createElement("canvas").getContext("2d"),document.body.appendChild(this.display.canvas)),e=(t=t<=0?100:t)<=0?100:e,this.display.canvas.width=t,this.display.canvas.height=e,this.display.canvas.oncontextmenu=function(){return!1},this.display.canvas.onclick=function(){return!1},this.display.canvas.onmousedown=function(){return!1},this.display.canvas.onmouseup=function(){return!1},this.display.canvas.ondblclick=function(){return console.log("dbl"),!1},this.buffer=document.createElement("canvas").getContext("2d"),this.buffer.canvas.width=t,this.buffer.canvas.height=e,this.buffer.imageSmoothingEnabled=!1,this.clearBuffer(),this.updateDisp()}get(t){return"buffer"==t?this.buffer:this.display}clearBuffer(){this.buffer.resetTransform(),this.buffer.fillStyle="#fff",this.buffer.fillRect(0,0,this.buffer.canvas.width,this.buffer.canvas.height)}updateDisp(){this.display.drawImage(this.buffer.canvas,0,0)}}class e{constructor(){this.data=[],this.checked2=[],this.drawUpdateList=[];for(let t=0;t<e.C.columns*e.C.rows;t++)this.data.push(0),this.checked2.push(0)}getState(){return this.state}getCellData(){let t=0,i=0;return this.checked2.forEach(((e,s)=>{e<0?i++:e>0&&this.data[s]>=0&&t++})),{flag:i,checked:t,left:e.C.columns*e.C.rows-e.C.numMine-t,flagLeft:e.C.numMine-i}}clear(){this.state="start",this.drawUpdateList=[];for(let t=0;t<e.C.columns*e.C.rows;t++)this.checked2[t]=0}setMine(t,i){this.state="ingame";for(let t=0;t<e.C.columns*e.C.rows;t++)this.data[t]=0;let s=0;for(;s<e.C.numMine;){let a=Math.random()*e.C.columns|0,l=Math.random()*e.C.rows|0;t-1<=a&&a<=t+1&&i-1<=l&&l<=i+1||this.getRawData(a,l)>=0&&(this.setRawData(a,l,-1),this.around(a,l,((t,e)=>{this.getRawData(t,e)>=0&&this.addRawData(t,e,1)})),s++)}}around(t,e,i){for(let s=-1;s<=1;s++)for(let a=-1;a<=1;a++)0==a&&0==s||this.isRangeOut(t+a,e+s)||i(t+a,e+s)}isRangeOut(t,i){return t<0||t>=e.C.columns||i<0||i>=e.C.rows}getRawData(t,i){return this.isRangeOut(t,i)?0:this.data[t+i*e.C.columns]}setRawData(t,i,s){this.isRangeOut(t,i)||(this.data[t+i*e.C.columns]=s)}addRawData(t,i,s){this.isRangeOut(t,i)||(this.data[t+i*e.C.columns]+=s)}isOpen(t,i){return!!this.isRangeOut(t,i)||this.checked2[t+i*e.C.columns]>0}isFlagged(t,i){return!this.isRangeOut(t,i)&&this.checked2[t+i*e.C.columns]<0}isPlain(t,i){return!this.isRangeOut(t,i)&&0==this.checked2[t+i*e.C.columns]}setFlag(t,i,s){return!this.isOpen(t,i)&&(this.checked2[t+i*e.C.columns]=s?-1:0,this.addUpdateList(t,i),!0)}addUpdateList(t,i){this.drawUpdateList.push(t+i*e.C.columns)}dig(t,i){return!!this.isPlain(t,i)&&(this.checked2[t+i*e.C.columns]=1,this.addUpdateList(t,i),!0)}digLoop(t,e){const i=[];for(i.push({x:t,y:e});i.length>0;){const t=i.shift();0!=this.dig(t.x,t.y)&&(0==this.getRawData(t.x,t.y)?this.around(t.x,t.y,((t,e)=>{i.push({x:t,y:e})})):this.getRawData(t.x,t.y)<0&&(this.state="stop"))}0==this.getCellData().left&&(this.state="stop")}flipFlag(t,e){this.setFlag(t,e,!this.isFlagged(t,e))}yoshinaniDigFlag(t,e,i=!0){if(!this.isFlagged(t,e)&&this.isOpen(t,e)){const s=this.getRawData(t,e);if(s>0){const a=[],l=[];this.around(t,e,((t,e)=>{this.isPlain(t,e)&&a.push({x:t,y:e}),this.isFlagged(t,e)&&l.push({x:t,y:e})})),s==l.length&&a.forEach((t=>{this.digLoop(t.x,t.y)})),i&&s==a.length+l.length&&a.forEach((t=>{this.setFlag(t.x,t.y,!0)}))}}}drawBase(t){t.clearRect(0,0,t.canvas.width,t.canvas.height),t.fillStyle=e.C.color.close,t.fillRect(0,0,t.canvas.width,t.canvas.height),t.fillStyle=e.C.color.line;for(let i=0;i<e.C.columns;i++)t.fillRect(i*e.C.cell.width,0,1,t.canvas.height);for(let i=0;i<e.C.rows;i++)t.fillRect(0,i*e.C.cell.height,t.canvas.width,1)}drawBmp(t,i,s,a){e.cellBMP[a]&&(i+=e.cellBMP[a].left,s+=e.cellBMP[a].top,e.cellBMP[a].bmp.forEach(((e,a)=>{e.forEach(((e,l)=>{e&&t.fillRect(i+l,s+a,1,1)}))})))}draw(t,i,s){this.isOpen(i,s)?(t.fillStyle=e.C.color.open,t.fillRect(i*e.C.cell.width+1,s*e.C.cell.height+1,e.C.cell.width-1,e.C.cell.height-1),this.getRawData(i,s)<0?(t.fillStyle=e.C.color.mine,this.drawBmp(t,i*e.C.cell.width,s*e.C.cell.height,9)):this.getRawData(i,s)>0&&(t.fillStyle=e.C.color.near,this.drawBmp(t,i*e.C.cell.width,s*e.C.cell.height,this.getRawData(i,s)))):(t.fillStyle=e.C.color.close,t.fillRect(i*e.C.cell.width+1,s*e.C.cell.height+1,e.C.cell.width-1,e.C.cell.height-1),this.isFlagged(i,s)&&(t.fillStyle=e.C.color.flag,this.drawBmp(t,i*e.C.cell.width,s*e.C.cell.height,10)))}yoshinaniUpdate(){for(const t of this.drawUpdateList){const i=t%e.C.columns,s=t/e.C.columns|0;this.yoshinaniDigFlag(i,s),this.around(i,s,((t,e)=>{this.yoshinaniDigFlag(t,e)}))}}drawUpdate(t){for(;this.drawUpdateList.length>0;){const i=this.drawUpdateList.shift(),s=i%e.C.columns,a=i/e.C.columns|0;this.draw(t,s,a)}}drawAll(t){for(let i=0;i<e.C.rows;i++)for(let s=0;s<e.C.columns;s++)this.draw(t,s,i)}}e.C={rows:100,columns:100,numMine:2200,cell:{width:8,height:8},color:{close:"#ddd",open:"#fff",line:"#bbb",mine:"#f00",flag:"#006",near:"#000"}},e.cellBMP=[{top:2,left:3,bmp:[[1,1,1],[1,0,1],[1,0,1],[1,0,1],[1,1,1]]},{top:2,left:4,bmp:[[1],[1],[1],[1],[1]]},{top:2,left:3,bmp:[[1,1,1],[0,0,1],[1,1,1],[1,0,0],[1,1,1]]},{top:2,left:3,bmp:[[1,1,1],[0,0,1],[1,1,1],[0,0,1],[1,1,1]]},{top:2,left:3,bmp:[[1,0,1],[1,0,1],[1,1,1],[0,0,1],[0,0,1]]},{top:2,left:3,bmp:[[1,1,1],[1,0,0],[1,1,1],[0,0,1],[1,1,1]]},{top:2,left:3,bmp:[[1,1,1],[1,0,0],[1,1,1],[1,0,1],[1,1,1]]},{top:2,left:3,bmp:[[1,1,1],[1,0,1],[0,0,1],[0,0,1],[0,0,1]]},{top:2,left:3,bmp:[[1,1,1],[1,0,1],[1,1,1],[1,0,1],[1,1,1]]},{top:2,left:2,bmp:[[1,0,1,0,1],[0,1,1,1],[1,1,1,1,1],[0,1,1,1],[1,0,1,0,1]]},{top:2,left:2,bmp:[[1,1,1],[1,1,1],[0,0,1],[0,1,1,1],[1,1,1,1,1]]}];class i{constructor(t){this.callback=t}start(){this.startTime=performance.now(),this.lastTime=this.startTime,this.tick()}stop(){cancelAnimationFrame(this.id)}getMs(){return this.lastTime-this.startTime}getSec(){return this.getMs()/1e3|0}tick(){this.id=requestAnimationFrame(this.tick.bind(this)),this.lastTime=performance.now(),this.getSec()!=this.tmpSec&&(this.tmpSec=this.getSec(),this.callback())}}const s=function(){let s,a,l;function n(){a.clear(),a.drawBase(s.get("buffer")),s.updateDisp(),l.stop()}function h(t){n()}function c(t){if("stop"==a.getState())return;const i=s.get("display").canvas,n=t.offsetX*i.width/i.clientWidth,h=t.offsetY*i.height/i.clientHeight,c=(n+.5)/e.C.cell.width|0,r=(h+.5)/e.C.cell.height|0;var d,f;"start"==a.getState()?(a.setMine(c,r),l.start(),o(c,r)):(d=c,f=r,"ingame"==a.getState()&&a.yoshinaniDigFlag(d,f,!1),document.getElementById("flagmode").checked!=(2==t.buttons)?function(t,e){"ingame"==a.getState()&&a.flipFlag(t,e)}(c,r):o(c,r)),document.getElementById("cheat").checked&&a.yoshinaniUpdate(),document.getElementById("flag").innerText=a.getCellData().flagLeft.toFixed(0),"stop"==a.getState()&&(l.stop(),0==a.getCellData().left&&setTimeout((()=>{alert("Great work!")}),100)),a.drawUpdate(s.get("buffer")),s.updateDisp()}function o(t,e){a.digLoop(t,e)}function r(){document.getElementById("time").innerText=l.getSec().toFixed(0)}return{start:function(){const o=e.C.columns*e.C.cell.width,d=e.C.rows*e.C.cell.height;s=new t(o,d,document.getElementById("game").getContext("2d")),a=new e,l=new i(r),s.get("display").canvas.addEventListener("mousedown",c),document.getElementById("reset").addEventListener("click",h),n()}}}();window.addEventListener("load",s.start)})();